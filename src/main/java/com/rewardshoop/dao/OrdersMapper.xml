<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rewardshoop.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.rewardshoop.model.Orders" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="add_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pay_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="success_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="add_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="total_consume_point" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="total_prepay_point" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="logistics_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_number, user_id, add_time, pay_time, success_time, add_id, state, total_consume_point, 
    total_prepay_point, logistics_number, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rewardshoop.model.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rewardshoop.model.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rewardshoop.model.Orders" >
    insert into orders (id, order_number, user_id, 
      add_time, pay_time, success_time, 
      add_id, state, total_consume_point, 
      total_prepay_point, logistics_number, remark
      )
    values (#{id,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{addTime,jdbcType=INTEGER}, #{payTime,jdbcType=INTEGER}, #{successTime,jdbcType=INTEGER}, 
      #{addId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{totalConsumePoint,jdbcType=INTEGER}, 
      #{totalPrepayPoint,jdbcType=INTEGER}, #{logisticsNumber,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rewardshoop.model.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="successTime != null" >
        success_time,
      </if>
      <if test="addId != null" >
        add_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="totalConsumePoint != null" >
        total_consume_point,
      </if>
      <if test="totalPrepayPoint != null" >
        total_prepay_point,
      </if>
      <if test="logisticsNumber != null" >
        logistics_number,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="successTime != null" >
        #{successTime,jdbcType=INTEGER},
      </if>
      <if test="addId != null" >
        #{addId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="totalConsumePoint != null" >
        #{totalConsumePoint,jdbcType=INTEGER},
      </if>
      <if test="totalPrepayPoint != null" >
        #{totalPrepayPoint,jdbcType=INTEGER},
      </if>
      <if test="logisticsNumber != null" >
        #{logisticsNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rewardshoop.model.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNumber != null" >
        order_number = #{record.orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=INTEGER},
      </if>
      <if test="record.successTime != null" >
        success_time = #{record.successTime,jdbcType=INTEGER},
      </if>
      <if test="record.addId != null" >
        add_id = #{record.addId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.totalConsumePoint != null" >
        total_consume_point = #{record.totalConsumePoint,jdbcType=INTEGER},
      </if>
      <if test="record.totalPrepayPoint != null" >
        total_prepay_point = #{record.totalPrepayPoint,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsNumber != null" >
        logistics_number = #{record.logisticsNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      order_number = #{record.orderNumber,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=INTEGER},
      success_time = #{record.successTime,jdbcType=INTEGER},
      add_id = #{record.addId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      total_consume_point = #{record.totalConsumePoint,jdbcType=INTEGER},
      total_prepay_point = #{record.totalPrepayPoint,jdbcType=INTEGER},
      logistics_number = #{record.logisticsNumber,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rewardshoop.model.Orders" >
    update orders
    <set >
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="successTime != null" >
        success_time = #{successTime,jdbcType=INTEGER},
      </if>
      <if test="addId != null" >
        add_id = #{addId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="totalConsumePoint != null" >
        total_consume_point = #{totalConsumePoint,jdbcType=INTEGER},
      </if>
      <if test="totalPrepayPoint != null" >
        total_prepay_point = #{totalPrepayPoint,jdbcType=INTEGER},
      </if>
      <if test="logisticsNumber != null" >
        logistics_number = #{logisticsNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rewardshoop.model.Orders" >
    update orders
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=INTEGER},
      success_time = #{successTime,jdbcType=INTEGER},
      add_id = #{addId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      total_consume_point = #{totalConsumePoint,jdbcType=INTEGER},
      total_prepay_point = #{totalPrepayPoint,jdbcType=INTEGER},
      logistics_number = #{logisticsNumber,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>